{"version":3,"file":"socket.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","_ref","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","prev","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","readyState","socket","value","_get","_getPrototypeOf","doOpen","doClose","onClose","packets","write","packet","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","get","poll","onPause","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","undefined","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","async","_this9","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","_typeof","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","timer","_len3","_key3","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","n","done","f","sent","_len4","_key4","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","_i","_nsps","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}