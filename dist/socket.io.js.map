{"version":3,"file":"socket.io.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../build/esm/url.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","readyState","socket","value","onError","_get","_getPrototypeOf","open","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","alphabet","map","seed","prev","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","_Transport","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","get","poll","pause","onPause","total","doPoll","_this3","_this4","_this5","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","undefined","_extends","Request","_this6","req","method","xhrStatus","_this7","pollXhr","_this8","async","_this9","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","_typeof","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","name","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","destroy","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","_readyState","_len2","_key2","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","timer","_len3","_key3","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","_iterator","_createForOfIteratorHelper","_step","s","n","done","listener","f","sent","_len4","_key4","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","_iterator2","_step2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_i","_nsps","active","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex"],"mappings":"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"}